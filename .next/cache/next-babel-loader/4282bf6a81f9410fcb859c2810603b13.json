{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport Comment from '../Comment/Comment';\nvar SAD_EMOJI = [55357, 56864];\nvar HAPPY_EMOJI = [55357, 56832];\nvar NEUTRAL_EMOJI = [55357, 56848];\n\nvar CommentsWidget = /*#__PURE__*/function (_Component) {\n  _inherits(CommentsWidget, _Component);\n\n  var _super = _createSuper(CommentsWidget);\n\n  function CommentsWidget() {\n    var _this;\n\n    _classCallCheck(this, CommentsWidget);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      comments: [],\n      person: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyUp\", function (evt) {\n      var value = evt.target.value;\n\n      if (evt.keyCode === 13 && !evt.shiftKey) {\n        var person = _this.state.person;\n        var comment = {\n          person: person,\n          comment: value,\n          timestamp: +new Date()\n        };\n        evt.target.value = '';\n\n        _this.setState({\n          person: null\n        }, function () {\n          return axios.post('/comment', comment);\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CommentsWidget, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n        cluster: process.env.PUSHER_APP_CLUSTER,\n        encrypted: true\n      });\n      this.channel = this.pusher.subscribe('post-comments');\n      this.channel.bind('new-comment', function (_ref) {\n        var _ref$comment = _ref.comment,\n            comment = _ref$comment === void 0 ? null : _ref$comment;\n        var comments = _this2.state.comments;\n        comment && comments.push(comment);\n\n        _this2.setState({\n          comments: comments\n        });\n      });\n      this.pusher.connection.bind('connected', function () {\n        axios.post('/comments').then(function (response) {\n          var comments = response.data.comments;\n\n          _this2.setState({\n            comments: comments\n          });\n        })[\"catch\"](function (error) {\n          console.log(error);\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.pusher.disconnect();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var people = ['Stephanie', 'John', 'Steve', 'Anna', 'Margaret', 'Felix', 'Chris', 'Jamie', 'Rose', 'Bob', 'Vanessa', '9lad', 'Bridget', 'Sebastian', 'Richard'];\n      var nameBadgeStyles = {\n        fontSize: '0.8rem',\n        height: 40,\n        borderRadius: 20,\n        cursor: 'pointer'\n      };\n\n      var choosePersona = function choosePersona(person) {\n        return function (evt) {\n          return _this3.setState({\n            person: person\n          });\n        };\n      };\n\n      var randomPeople = function randomPeople(count) {\n        var selected = [];\n        var i = 0;\n        count = Math.max(0, Math.min(count, people.length));\n\n        while (i < count) {\n          var index = Math.floor(Math.random() * people.length);\n          if (selected.includes(index)) continue;\n          ++i && selected.push(index);\n        }\n\n        return selected.map(function (index) {\n          var person = people[index];\n          var className = 'd-block d-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mr-3';\n          return __jsx(\"span\", {\n            key: index,\n            className: className,\n            style: nameBadgeStyles,\n            title: person,\n            onClick: choosePersona(person)\n          }, person);\n        });\n      };\n\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"border-bottom border-gray w-100 px-2 d-flex align-items-center bg-white justify-content-between\",\n        style: {\n          height: 90\n        }\n      }, __jsx(\"h2\", {\n        className: \"text-dark mb-0 mx-4\"\n      }, \"Comments\"), __jsx(\"span\", {\n        className: \"badge badge-pill badge-primary mx-4\",\n        style: {\n          fontSize: '1.2rem'\n        }\n      }, this.state.comments.length)), __jsx(\"div\", {\n        className: \"px-4 pb-4 w-100 d-flex flex-row flex-wrap align-items-start align-content-start position-relative\",\n        style: {\n          height: 'calc(100% - 250px)',\n          overflowY: 'scroll'\n        }\n      }, this.state.comments.map(function (comment, index) {\n        var mood = comment.sentiment > 0 ? HAPPY_EMOJI : comment.sentiment === 0 ? NEUTRAL_EMOJI : SAD_EMOJI;\n        return __jsx(Fragment, {\n          key: index\n        }, __jsx(\"div\", {\n          className: \"d-flex justify-content-start align-items-center w-100 font-weight-bold text-dark mt-4 pb-1 px-1\",\n          style: {\n            fontSize: '0.9rem'\n          }\n        }, __jsx(\"span\", {\n          className: \"d-inline-block pr-1\",\n          style: {\n            fontSize: '1.25rem'\n          }\n        }, String.fromCodePoint.apply(String, _toConsumableArray(mood))), __jsx(\"span\", {\n          className: \"align-middle\",\n          style: {\n            lineHeight: '1.25rem'\n          }\n        }, comment.person || 'Anonymous')), __jsx(Comment, {\n          text: comment.comment\n        }));\n      })), __jsx(\"div\", {\n        className: \"border-top border-gray w-100 px-4 d-flex flex-wrap align-items-center align-content-center bg-light\",\n        style: {\n          height: 160\n        }\n      }, !this.state.person && __jsx(\"span\", {\n        className: \"text-dark py-2\",\n        style: {\n          fontSize: '1.5rem',\n          fontWeight: 500\n        }\n      }, \"Choose your Persona\"), __jsx(\"div\", {\n        className: \"w-100 py-2 pb-3 d-flex justify-content-start\"\n      }, this.state.person ? __jsx(\"span\", {\n        className: \"d-block d-flex align-items-center text-center text-white bg-primary font-weight-bold py-2 px-4 mr-3\",\n        style: nameBadgeStyles,\n        title: this.state.person\n      }, this.state.person) : randomPeople(4)), this.state.person && __jsx(\"textarea\", {\n        className: \"form-control px-3 py-2\",\n        onKeyUp: this.handleKeyUp,\n        placeholder: \"Make a comment\",\n        style: {\n          resize: 'none'\n        }\n      })));\n    }\n  }]);\n\n  return CommentsWidget;\n}(Component);\n\nexport default CommentsWidget;","map":{"version":3,"sources":["/Users/SissyXia11/Desktop/reacthomework/next-js-app/components/CommentsWidget/CommentsWidget.js"],"names":["React","Component","Fragment","axios","Pusher","Comment","SAD_EMOJI","HAPPY_EMOJI","NEUTRAL_EMOJI","CommentsWidget","comments","person","evt","value","target","keyCode","shiftKey","state","comment","timestamp","Date","setState","post","pusher","process","env","PUSHER_APP_KEY","cluster","PUSHER_APP_CLUSTER","encrypted","channel","subscribe","bind","push","connection","then","response","data","error","console","log","disconnect","people","nameBadgeStyles","fontSize","height","borderRadius","cursor","choosePersona","randomPeople","count","selected","i","Math","max","min","length","index","floor","random","includes","map","className","overflowY","mood","sentiment","String","fromCodePoint","lineHeight","fontWeight","handleKeyUp","resize"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport Comment from '../Comment/Comment';\n\nconst SAD_EMOJI = [55357, 56864];\nconst HAPPY_EMOJI = [55357, 56832];\nconst NEUTRAL_EMOJI = [55357, 56848];\n\nclass CommentsWidget extends Component {\n  state = { comments: [], person: null };\n\n  componentDidMount() {\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n      cluster: process.env.PUSHER_APP_CLUSTER,\n      encrypted: true,\n    });\n\n    this.channel = this.pusher.subscribe('post-comments');\n\n    this.channel.bind('new-comment', ({ comment = null }) => {\n      const { comments } = this.state;\n      comment && comments.push(comment);\n      this.setState({ comments });\n    });\n\n    this.pusher.connection.bind('connected', () => {\n      axios\n        .post('/comments')\n        .then((response) => {\n          const comments = response.data.comments;\n          this.setState({ comments });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    });\n  }\n\n  componentWillUnmount() {\n    this.pusher.disconnect();\n  }\n\n  handleKeyUp = (evt) => {\n    const value = evt.target.value;\n\n    if (evt.keyCode === 13 && !evt.shiftKey) {\n      const { person } = this.state;\n      const comment = { person, comment: value, timestamp: +new Date() };\n\n      evt.target.value = '';\n      this.setState({ person: null }, () => axios.post('/comment', comment));\n    }\n  };\n\n  render() {\n    const people = [\n      'Stephanie',\n      'John',\n      'Steve',\n      'Anna',\n      'Margaret',\n      'Felix',\n      'Chris',\n      'Jamie',\n      'Rose',\n      'Bob',\n      'Vanessa',\n      '9lad',\n      'Bridget',\n      'Sebastian',\n      'Richard',\n    ];\n\n    const nameBadgeStyles = {\n      fontSize: '0.8rem',\n      height: 40,\n      borderRadius: 20,\n      cursor: 'pointer',\n    };\n\n    const choosePersona = (person) => (evt) => this.setState({ person });\n\n    const randomPeople = (count) => {\n      const selected = [];\n      let i = 0;\n\n      count = Math.max(0, Math.min(count, people.length));\n\n      while (i < count) {\n        const index = Math.floor(Math.random() * people.length);\n        if (selected.includes(index)) continue;\n        ++i && selected.push(index);\n      }\n\n      return selected.map((index) => {\n        const person = people[index];\n        const className =\n          'd-block d-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mr-3';\n\n        return (\n          <span\n            key={index}\n            className={className}\n            style={nameBadgeStyles}\n            title={person}\n            onClick={choosePersona(person)}\n          >\n            {person}\n          </span>\n        );\n      });\n    };\n\n    return (\n      <>\n        <div\n          className='border-bottom border-gray w-100 px-2 d-flex align-items-center bg-white justify-content-between'\n          style={{ height: 90 }}\n        >\n          <h2 className='text-dark mb-0 mx-4'>Comments</h2>\n          <span\n            className='badge badge-pill badge-primary mx-4'\n            style={{ fontSize: '1.2rem' }}\n          >\n            {this.state.comments.length}\n          </span>\n        </div>\n\n        <div\n          className='px-4 pb-4 w-100 d-flex flex-row flex-wrap align-items-start align-content-start position-relative'\n          style={{ height: 'calc(100% - 250px)', overflowY: 'scroll' }}\n        >\n          {this.state.comments.map((comment, index) => {\n            const mood =\n              comment.sentiment > 0\n                ? HAPPY_EMOJI\n                : comment.sentiment === 0\n                ? NEUTRAL_EMOJI\n                : SAD_EMOJI;\n\n            return (\n              <Fragment key={index}>\n                <div\n                  className={`d-flex justify-content-start align-items-center w-100 font-weight-bold text-dark mt-4 pb-1 px-1`}\n                  style={{ fontSize: '0.9rem' }}\n                >\n                  <span\n                    className='d-inline-block pr-1'\n                    style={{ fontSize: '1.25rem' }}\n                  >\n                    {String.fromCodePoint(...mood)}\n                  </span>\n                  <span\n                    className='align-middle'\n                    style={{ lineHeight: '1.25rem' }}\n                  >\n                    {comment.person || 'Anonymous'}\n                  </span>\n                </div>\n\n                <Comment text={comment.comment} />\n              </Fragment>\n            );\n          })}\n        </div>\n\n        <div\n          className='border-top border-gray w-100 px-4 d-flex flex-wrap align-items-center align-content-center bg-light'\n          style={{ height: 160 }}\n        >\n          {!this.state.person && (\n            <span\n              className='text-dark py-2'\n              style={{ fontSize: '1.5rem', fontWeight: 500 }}\n            >\n              Choose your Persona\n            </span>\n          )}\n\n          <div className='w-100 py-2 pb-3 d-flex justify-content-start'>\n            {this.state.person ? (\n              <span\n                className='d-block d-flex align-items-center text-center text-white bg-primary font-weight-bold py-2 px-4 mr-3'\n                style={nameBadgeStyles}\n                title={this.state.person}\n              >\n                {this.state.person}\n              </span>\n            ) : (\n              randomPeople(4)\n            )}\n          </div>\n\n          {this.state.person && (\n            <textarea\n              className='form-control px-3 py-2'\n              onKeyUp={this.handleKeyUp}\n              placeholder='Make a comment'\n              style={{ resize: 'none' }}\n            ></textarea>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default CommentsWidget;\n"]},"metadata":{},"sourceType":"module"}