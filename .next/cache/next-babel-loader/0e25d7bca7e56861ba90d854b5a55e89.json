{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\n\nvar CommentsWidget = /*#__PURE__*/function (_Component) {\n  _inherits(CommentsWidget, _Component);\n\n  var _super = _createSuper(CommentsWidget);\n\n  function CommentsWidget() {\n    var _this;\n\n    _classCallCheck(this, CommentsWidget);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      comments: [],\n      person: null\n    });\n\n    return _this;\n  }\n\n  _createClass(CommentsWidget, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n        cluster: process.env.PUSHER_APP_CLUSTER,\n        encrypted: true\n      });\n      this.channel = this.pusher.subscribe('post-comments');\n      this.channel.bind('new-comment', function (_ref) {\n        var _ref$comment = _ref.comment,\n            comment = _ref$comment === void 0 ? null : _ref$comment;\n        var comments = _this2.state.comments;\n        comment && comments.push(comment);\n\n        _this2.setState({\n          comments: comments\n        });\n      });\n      this.pusher.connection.bind('connected', function () {\n        axios.post('/comments').then(function (response) {\n          var comments = response.data.comments;\n\n          _this2.setState({\n            comments: comments\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.pusher.disconnect();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var people = ['Stephanie', 'John', 'Steve', 'Anna', 'Margaret', 'Felix', 'Chris', 'Jamie', 'Rose', 'Bob', 'Vanessa', '9lad', 'Bridget', 'Sebastian', 'Richard'];\n      var nameBadgeStyles = {\n        fontSize: '0.8rem',\n        height: 40,\n        borderRadius: 20,\n        cursor: 'pointer'\n      };\n\n      var choosePersona = function choosePersona(person) {\n        return function (evt) {\n          return _this3.setState({\n            person: person\n          });\n        };\n      };\n\n      var randomPeople = function randomPeople(count) {\n        var selected = [];\n        var i = 0;\n        count = Math.max(0, Math.min(count, people.length));\n\n        while (i < count) {\n          var index = Math.floor(Math.random() * people.length);\n          if (selected.includes(index)) continue;\n          ++i && selected.push(index);\n        }\n\n        return selected.map(function (index) {\n          var person = people[index];\n          var className = 'd-block d-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mr-3';\n          return __jsx(\"span\", {\n            key: index,\n            className: className,\n            style: nameBadgeStyles,\n            title: person,\n            onClick: choosePersona(person)\n          }, person);\n        });\n      };\n\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"border-bottom border-gray w-100 px-2 d-flex align-items-center bg-white justify-content-between\",\n        style: {\n          height: 90\n        }\n      }, __jsx(\"h2\", {\n        className: \"text-dark mb-0 mx-4\"\n      }, \"Comments\"), __jsx(\"span\", {\n        \"class\": \"badge badge-pill badge-primary mx-4\",\n        style: {\n          fontSize: '1.2rem'\n        }\n      }, this.state.comments.length)));\n    }\n  }]);\n\n  return CommentsWidget;\n}(Component);\n\nexport default CommentsWidget;","map":{"version":3,"sources":["/Users/SissyXia11/Desktop/reacthomework/next-js-app/components/CommentsWidget/CommentsWidget.js"],"names":["React","Component","axios","Pusher","CommentsWidget","comments","person","pusher","process","env","PUSHER_APP_KEY","cluster","PUSHER_APP_CLUSTER","encrypted","channel","subscribe","bind","comment","state","push","setState","connection","post","then","response","data","disconnect","people","nameBadgeStyles","fontSize","height","borderRadius","cursor","choosePersona","evt","randomPeople","count","selected","i","Math","max","min","length","index","floor","random","includes","map","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\n\nclass CommentsWidget extends Component {\n  state = { comments: [], person: null };\n\n  componentDidMount() {\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n      cluster: process.env.PUSHER_APP_CLUSTER,\n      encrypted: true,\n    });\n\n    this.channel = this.pusher.subscribe('post-comments');\n\n    this.channel.bind('new-comment', ({ comment = null }) => {\n      const { comments } = this.state;\n      comment && comments.push(comment);\n      this.setState({ comments });\n    });\n\n    this.pusher.connection.bind('connected', () => {\n      axios.post('/comments').then((response) => {\n        const comments = response.data.comments;\n        this.setState({ comments });\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.pusher.disconnect();\n  }\n\n  render() {\n    const people = [\n      'Stephanie',\n      'John',\n      'Steve',\n      'Anna',\n      'Margaret',\n      'Felix',\n      'Chris',\n      'Jamie',\n      'Rose',\n      'Bob',\n      'Vanessa',\n      '9lad',\n      'Bridget',\n      'Sebastian',\n      'Richard',\n    ];\n\n    const nameBadgeStyles = {\n      fontSize: '0.8rem',\n      height: 40,\n      borderRadius: 20,\n      cursor: 'pointer',\n    };\n\n    const choosePersona = (person) => (evt) => this.setState({ person });\n\n    const randomPeople = (count) => {\n      const selected = [];\n      let i = 0;\n\n      count = Math.max(0, Math.min(count, people.length));\n\n      while (i < count) {\n        const index = Math.floor(Math.random() * people.length);\n        if (selected.includes(index)) continue;\n        ++i && selected.push(index);\n      }\n\n      return selected.map((index) => {\n        const person = people[index];\n        const className =\n          'd-block d-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mr-3';\n\n        return (\n          <span\n            key={index}\n            className={className}\n            style={nameBadgeStyles}\n            title={person}\n            onClick={choosePersona(person)}\n          >\n            {person}\n          </span>\n        );\n      });\n    };\n\n    return (\n      <>\n        <div\n          className='border-bottom border-gray w-100 px-2 d-flex align-items-center bg-white justify-content-between'\n          style={{ height: 90 }}\n        >\n          <h2 className='text-dark mb-0 mx-4'>Comments</h2>\n          <span\n            class='badge badge-pill badge-primary mx-4'\n            style={{ fontSize: '1.2rem' }}\n          >\n            {this.state.comments.length}\n          </span>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default CommentsWidget;\n"]},"metadata":{},"sourceType":"module"}