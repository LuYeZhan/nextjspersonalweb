{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\n\nclass CommentsWidget extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      comments: [],\n      person: null\n    });\n  }\n\n  componentDidMount() {\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n      cluster: process.env.PUSHER_APP_CLUSTER,\n      encrypted: true\n    });\n    this.channel = this.pusher.subscribe('post-comments');\n    this.channel.bind('new-comment', ({\n      comment = null\n    }) => {\n      const {\n        comments\n      } = this.state;\n      comment && comments.push(comment);\n      this.setState({\n        comments\n      });\n    });\n    this.pusher.connection.bind('connected', () => {\n      axios.post('/comments').then(response => {\n        const comments = response.data.comments;\n        this.setState({\n          comments\n        });\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.pusher.disconnect();\n  }\n\n  render() {\n    const people = ['Stephanie', 'John', 'Steve', 'Anna', 'Margaret', 'Felix', 'Chris', 'Jamie', 'Rose', 'Bob', 'Vanessa', '9lad', 'Bridget', 'Sebastian', 'Richard'];\n    const nameBadgeStyles = {\n      fontSize: '0.8rem',\n      height: 40,\n      borderRadius: 20,\n      cursor: 'pointer'\n    };\n\n    const choosePersona = person => evt => this.setState({\n      person\n    });\n\n    const randomPeople = count => {\n      const selected = [];\n      let i = 0;\n      count = Math.max(0, Math.min(count, people.length));\n\n      while (i < count) {\n        const index = Math.floor(Math.random() * people.length);\n        if (selected.includes(index)) continue;\n        ++i && selected.push(index);\n      }\n\n      return selected.map(index => {\n        const person = people[index];\n        const className = 'd-block d-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mr-3';\n        return __jsx(\"span\", {\n          key: index,\n          className: className,\n          style: nameBadgeStyles,\n          title: person,\n          onClick: choosePersona(person)\n        }, person);\n      });\n    };\n\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"border-bottom border-gray w-100 px-2 d-flex align-items-center bg-white justify-content-between\",\n      style: {\n        height: 90\n      }\n    }, __jsx(\"h2\", {\n      className: \"text-dark mb-0 mx-4\"\n    }, \"Comments\"), __jsx(\"span\", {\n      class: \"badge badge-pill badge-primary mx-4\",\n      style: {\n        fontSize: '1.2rem'\n      }\n    }, this.state.comments.length)));\n  }\n\n}\n\nexport default CommentsWidget;","map":{"version":3,"sources":["/Users/SissyXia11/Desktop/reacthomework/next-js-app/components/CommentsWidget/CommentsWidget.js"],"names":["React","Component","axios","Pusher","CommentsWidget","comments","person","componentDidMount","pusher","process","env","PUSHER_APP_KEY","cluster","PUSHER_APP_CLUSTER","encrypted","channel","subscribe","bind","comment","state","push","setState","connection","post","then","response","data","componentWillUnmount","disconnect","render","people","nameBadgeStyles","fontSize","height","borderRadius","cursor","choosePersona","evt","randomPeople","count","selected","i","Math","max","min","length","index","floor","random","includes","map","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\n\nclass CommentsWidget extends Component {\n  state = { comments: [], person: null };\n\n  componentDidMount() {\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n      cluster: process.env.PUSHER_APP_CLUSTER,\n      encrypted: true,\n    });\n\n    this.channel = this.pusher.subscribe('post-comments');\n\n    this.channel.bind('new-comment', ({ comment = null }) => {\n      const { comments } = this.state;\n      comment && comments.push(comment);\n      this.setState({ comments });\n    });\n\n    this.pusher.connection.bind('connected', () => {\n      axios.post('/comments').then((response) => {\n        const comments = response.data.comments;\n        this.setState({ comments });\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.pusher.disconnect();\n  }\n\n  render() {\n    const people = [\n      'Stephanie',\n      'John',\n      'Steve',\n      'Anna',\n      'Margaret',\n      'Felix',\n      'Chris',\n      'Jamie',\n      'Rose',\n      'Bob',\n      'Vanessa',\n      '9lad',\n      'Bridget',\n      'Sebastian',\n      'Richard',\n    ];\n\n    const nameBadgeStyles = {\n      fontSize: '0.8rem',\n      height: 40,\n      borderRadius: 20,\n      cursor: 'pointer',\n    };\n\n    const choosePersona = (person) => (evt) => this.setState({ person });\n\n    const randomPeople = (count) => {\n      const selected = [];\n      let i = 0;\n\n      count = Math.max(0, Math.min(count, people.length));\n\n      while (i < count) {\n        const index = Math.floor(Math.random() * people.length);\n        if (selected.includes(index)) continue;\n        ++i && selected.push(index);\n      }\n\n      return selected.map((index) => {\n        const person = people[index];\n        const className =\n          'd-block d-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mr-3';\n\n        return (\n          <span\n            key={index}\n            className={className}\n            style={nameBadgeStyles}\n            title={person}\n            onClick={choosePersona(person)}\n          >\n            {person}\n          </span>\n        );\n      });\n    };\n\n    return (\n      <>\n        <div\n          className='border-bottom border-gray w-100 px-2 d-flex align-items-center bg-white justify-content-between'\n          style={{ height: 90 }}\n        >\n          <h2 className='text-dark mb-0 mx-4'>Comments</h2>\n          <span\n            class='badge badge-pill badge-primary mx-4'\n            style={{ fontSize: '1.2rem' }}\n          >\n            {this.state.comments.length}\n          </span>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default CommentsWidget;\n"]},"metadata":{},"sourceType":"module"}